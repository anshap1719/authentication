// Code generated by goa v3.0.6, DO NOT EDIT.
//
// instagram HTTP client CLI support package
//
// Command:
// $ goa gen github.com/anshap1719/authentication/design

package client

import (
	instagram "github.com/anshap1719/authentication/controllers/gen/instagram"
)

// BuildRegisterURLPayload builds the payload for the instagram register-url
// endpoint from CLI flags.
func BuildRegisterURLPayload(instagramRegisterURLAPIKey string, instagramRegisterURLRedirectURL string) (*instagram.RegisterURLPayload, error) {
	var aPIKey *string
	{
		if instagramRegisterURLAPIKey != "" {
			aPIKey = &instagramRegisterURLAPIKey
		}
	}
	var redirectURL *string
	{
		if instagramRegisterURLRedirectURL != "" {
			redirectURL = &instagramRegisterURLRedirectURL
		}
	}
	payload := &instagram.RegisterURLPayload{
		APIKey:      aPIKey,
		RedirectURL: redirectURL,
	}
	return payload, nil
}

// BuildAttachToAccountPayload builds the payload for the instagram
// attach-to-account endpoint from CLI flags.
func BuildAttachToAccountPayload(instagramAttachToAccountAuthorization string, instagramAttachToAccountXSession string, instagramAttachToAccountAPIKey string, instagramAttachToAccountRedirectURL string) (*instagram.AttachToAccountPayload, error) {
	var authorization *string
	{
		if instagramAttachToAccountAuthorization != "" {
			authorization = &instagramAttachToAccountAuthorization
		}
	}
	var xSession *string
	{
		if instagramAttachToAccountXSession != "" {
			xSession = &instagramAttachToAccountXSession
		}
	}
	var aPIKey *string
	{
		if instagramAttachToAccountAPIKey != "" {
			aPIKey = &instagramAttachToAccountAPIKey
		}
	}
	var redirectURL *string
	{
		if instagramAttachToAccountRedirectURL != "" {
			redirectURL = &instagramAttachToAccountRedirectURL
		}
	}
	payload := &instagram.AttachToAccountPayload{
		Authorization: authorization,
		XSession:      xSession,
		APIKey:        aPIKey,
		RedirectURL:   redirectURL,
	}
	return payload, nil
}

// BuildDetachFromAccountPayload builds the payload for the instagram
// detach-from-account endpoint from CLI flags.
func BuildDetachFromAccountPayload(instagramDetachFromAccountAuthorization string, instagramDetachFromAccountXSession string, instagramDetachFromAccountAPIKey string) (*instagram.DetachFromAccountPayload, error) {
	var authorization *string
	{
		if instagramDetachFromAccountAuthorization != "" {
			authorization = &instagramDetachFromAccountAuthorization
		}
	}
	var xSession *string
	{
		if instagramDetachFromAccountXSession != "" {
			xSession = &instagramDetachFromAccountXSession
		}
	}
	var aPIKey *string
	{
		if instagramDetachFromAccountAPIKey != "" {
			aPIKey = &instagramDetachFromAccountAPIKey
		}
	}
	payload := &instagram.DetachFromAccountPayload{
		Authorization: authorization,
		XSession:      xSession,
		APIKey:        aPIKey,
	}
	return payload, nil
}

// BuildReceivePayload builds the payload for the instagram receive endpoint
// from CLI flags.
func BuildReceivePayload(instagramReceiveCode string, instagramReceiveState string, instagramReceiveAuthorization string, instagramReceiveXSession string, instagramReceiveRedirectURL string, instagramReceiveAPIKey string) (*instagram.ReceivePayload, error) {
	var code string
	{
		code = instagramReceiveCode
	}
	var state string
	{
		state = instagramReceiveState
	}
	var authorization *string
	{
		if instagramReceiveAuthorization != "" {
			authorization = &instagramReceiveAuthorization
		}
	}
	var xSession *string
	{
		if instagramReceiveXSession != "" {
			xSession = &instagramReceiveXSession
		}
	}
	var redirectURL *string
	{
		if instagramReceiveRedirectURL != "" {
			redirectURL = &instagramReceiveRedirectURL
		}
	}
	var aPIKey *string
	{
		if instagramReceiveAPIKey != "" {
			aPIKey = &instagramReceiveAPIKey
		}
	}
	payload := &instagram.ReceivePayload{
		Code:          &code,
		State:         &state,
		Authorization: authorization,
		XSession:      xSession,
		RedirectURL:   redirectURL,
		APIKey:        aPIKey,
	}
	return payload, nil
}
